alertmanager:
  enabled: false

grafana:
  replicas: 2
  useStatefulSet: true
  deploymentStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  persistence:
    enabled: false
  admin:
    existingSecret: "grafana-admin"

  envFromSecret: "grafana-env"
  server:
    root_url: "https://grafana-pve1.spbnix.local"

  plugins:
    - vonage-status-panel
    - grafana-piechart-panel
    - victoriametrics-logs-datasource

  grafana.ini:
    database:
      type: postgres
      host: postgres-master.postgres.svc.cluster.local:5432
      name: grafana
      user: grafana
      password: $__env{GRAFANA_DB_PASSWORD}
      ssl_mode: require
    log.file:
      level: debug
    server:
      root_url: "https://grafana-pve1.spbnix.local"
    auth.anonymous:
      enabled: false
      org_name: Main Org.
      org_role: Viewer
    security:
      allow_embedding: true

  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - grafana-pve1.spbnix.local
    tls:
      - secretName: grafana-pve1-tls-secret
        hosts:
          - grafana-pve1.spbnix.local

  additionalDataSources:
    - name: Qryn
      type: loki
      url: http://qryn.qryn.svc.cluster.local:3100
      access: proxy
      isDefault: false
    - name: victoria-logs
      type: victoriametrics-logs-datasource
      access: proxy
      url: http://vlogs-vlogs.victorialogs.svc.cluster.local:9428
      isDefault: false
      editable: false
    - name: Prometheus
      type: prometheus
      editable: false
      url: http://victoria-metrics-single-server.victoriametrics.svc.cluster.local:8428
      access: proxy
      orgId: 1
      isDefault: true

  sidecar:
    datasources:
      defaultDatasourceEnabled: false
      isDefaultDatasource: false

prometheus:
  thanosService:
    enabled: true
  thanosServiceMonitor:
    enabled: true
    relabelings:
    - sourceLabels: [job]
      regex: 'kube-prometheus-stack-thanos-discovery'
      targetLabel: job
      replacement: 'kube-prometheus-stack-thanos-sidecar'
      action: replace
  prometheusSpec:
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    replicaExternalLabelNameClear: true
    remoteWrite:
      - url: "http://victoria-metrics-single-server.victoriametrics.svc.cluster.local:8428/api/v1/write"
        queueConfig:
          batchSendDeadline: 1s
          minShards: 1
          maxShards: 2
          maxSamplesPerSend: 100
          capacity: 1000
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: ceph-block-3
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 6Gi
    retention: 2d
    replicas: 2
    podAntiAffinity: "hard"
    image:
      registry: docker.io
      repository: prompp/prompp
      tag: 2.53.2-0.2.6
    securityContext:
      fsGroup: 64535
      runAsGroup: 64535
      runAsNonRoot: true
      runAsUser: 64535

prometheus-node-exporter:
  prometheus:
    monitor:
      enabled: true
      attachMetadata:
        node: true
      relabelings:
        - sourceLabels: [__meta_kubernetes_node_label_kubernetes_io_arch]
          targetLabel: kubernetes_node_label_kubernetes_io_arch
          action: replace
